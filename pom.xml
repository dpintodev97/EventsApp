<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>es.proyecto.eventos</groupId>
  <artifactId>EventsApp</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>EventsApp Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
	<dependency>
   		<groupId>org.hibernate</groupId>
    	<artifactId>hibernate-core</artifactId>
    	<version>5.6.15.Final</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
	<dependency>
    	<groupId>com.mysql</groupId>
    	<artifactId>mysql-connector-j</artifactId>
    	<version>8.3.0</version>
	</dependency>
	
	  <!-- JAKARTA dependencies: scope: provided ==> solo para compilar la app (lo soporta ya Tomcat); 
    pero no para empaquetar/usarla en la app al hacer el despliegue. Esto reduce el tamaño del WAR final
    TOMCAT version: 10.1.24
    Dependencias para soportar todo lo que este Tomcat nos ofrece al ejecutar la app!! -->
    
    <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
	<dependency>
    	<groupId>jakarta.servlet</groupId>
    	<artifactId>jakarta.servlet-api</artifactId>
    	<version>6.0.0</version>
    	<scope>provided</scope>
	</dependency>

    <!-- https://mvnrepository.com/artifact/jakarta.servlet.jsp/jakarta.servlet.jsp-api -->
	<dependency>
    	<groupId>jakarta.servlet.jsp</groupId>
    	<artifactId>jakarta.servlet.jsp-api</artifactId>
    	<version>3.1.1</version>
    	<scope>provided</scope>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/jakarta.el/jakarta.el-api -->
	<dependency>
    	<groupId>jakarta.el</groupId>
    	<artifactId>jakarta.el-api</artifactId>
    	<version>5.0.1</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/jakarta.websocket/jakarta.websocket-api -->
	<dependency>
    	<groupId>jakarta.websocket</groupId>
    	<artifactId>jakarta.websocket-api</artifactId>
    	<version>2.1.1</version>
    	<scope>provided</scope>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/jakarta.security.enterprise/jakarta.security.enterprise-api -->
	<dependency>
    	<groupId>jakarta.security.enterprise</groupId>
    	<artifactId>jakarta.security.enterprise-api</artifactId>
    	<version>3.0.0</version>
	</dependency>
	
	<!-- glassfish: Proporciona soporte para la biblioteca Jakarta Standard Tag Library (JSTL). -->
	<!-- https://mvnrepository.com/artifact/org.glassfish.web/jakarta.servlet.jsp.jstl -->
	<dependency>
    	<groupId>org.glassfish.web</groupId>
    	<artifactId>jakarta.servlet.jsp.jstl</artifactId>
    	<version>3.0.1</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.codehaus.cargo/cargo-core-container-tomcat -->
	<!-- cargo: se encarga de arrancar un Tomcat embebido-->
	<dependency>
    	<groupId>org.codehaus.cargo</groupId>
    	<artifactId>cargo-core-container-tomcat</artifactId>
    	<version>1.10.13</version>
    	<type>jar</type>
	</dependency>
	<!--type jar PORQUE LOS jar se utilizan para encapsular y compartir código reutilizable; 
    	y es jar porque proporciona bibliotecas para que Cargo interactúe con Tomcat, que no es un componente específico de la web. -->

  </dependencies>


  <build>
    <finalName>EventsApp</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <!-- COMPATIBILIDAD CON JAVA 17, CONFIGURACION CON LA QUE SE ESCRIBE CODIGO FUENTE JAVA + CON LA QUE SE COMPILA EL CODIGO-->
          <configuration>
    		<source>17</source>
    		<target>17</target>
		</configuration>
        </plugin>
        
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
          <!-- en caso de que no tengamos un fichero web.xml (fichero de DESPLIEGUE) NO DEBERÍA FALLAR ese despliegue.-->
          <configuration>
			  <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>
        
        <plugin>
			<groupId>org.codehaus.cargo</groupId>
			<artifactId>cargo-maven3-plugin</artifactId>
			<version>1.10.13</version>
			<configuration>
				<container>
					<containerId>tomcat10</containerId>
					<type>embedded</type>
				</container>
			</configuration>
		</plugin>
        
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        
        
      </plugins>
    </pluginManagement>
  </build>
</project>
